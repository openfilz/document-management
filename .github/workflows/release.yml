on:
  pull_request:
    branches: [ "main" ]
    types:
      - closed

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo The PR was merged to main....

      - uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: maven

      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: Commit Changelog
        run: |
          git add CHANGELOG.md
          git commit -m "docs: update changelog for version ${{ github.event.inputs.releaseVersion }}"
          git push origin main

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          passphrase: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

      - name: Setup Maven settings.xml
        uses: s4u/maven-settings-action@v3.1.0
        with:
          servers: |
            [{
              "id": "github",
              "username": "${{ github.actor }}",
              "password": "${{ secrets.GITHUB_TOKEN }}"
            },
            {
                "id": "central",
                "username": "${{ secrets.MAVEN_USERNAME }}",
                "password": "${{ secrets.MAVEN_PASSWORD }}"
            }]

      - name: Prepare Release
        run: |
          set -e
          mvn release:prepare \
          -Pkube \
          -DtagNameFormat=v@{project.version} \   
          -Dregistry.hostname=ghcr.io \
          -Dregistry.port=443 \
          -Ddocker.context.path=openfilz/ \
          -Djib.to.auth.username=${{ github.actor }} \
          -Djib.to.auth.password=${{ secrets.GITHUB_TOKEN }} \
          --file pom.xml

      - name: Perform Release
        run: |
          mvn release:perform \
          -DskipTests \
          -Dgpg.skip \
          --file pom.xml

      - name: Push changes
        run: |
          set -e
          git push origin main
          git push origin --tags

      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project

      - name: Generate Changelog
        run: mvn git-changelog-maven-plugin:git-changelog

      - name: Commit Changelog
        run: |
          git add CHANGELOG.md
          git commit -m "docs: update changelog for version ${{ steps.project.outputs.version }}"
          git push origin main

      - name: Get Changelog Entry
        id: changelog
        run: |
          CHANGELOG_ENTRY=$(sed -n "/## ${GITHUB_REF#refs/tags/}/,/## /p" CHANGELOG.md | sed '$d')
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG_ENTRY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.project.outputs.version }}
          name: Release v${{ steps.project.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          files: |
            target/*.jar
            target/*.pom
          draft: true
          prerelease: false
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

